

<body>
<div class="page-wrapper">
<header class="header header-6">
  <div class="header-middle">
      <div class="container">
          <div class="header-left">
              <div class="header-search header-search-extended header-search-visible d-none d-lg-block">
                  <a href="#" class="search-toggle" role="button"><i class="icon-search"></i></a>
                  <form action="/products" method="get">
                      <div class="header-search-wrapper search-wrapper-wide">
                          <label for="q" class="sr-only">Search</label>
                          <button class="btn btn-primary" type="submit"><i class="icon-search"></i></button>
                          <input type="search" class="form-control" name="search" id="search" placeholder="Search product ..." required>
                      </div><!-- End .header-search-wrapper -->
                  </form>
              </div><!-- End .header-search -->
          </div>
          <div class="header-center">
              <a href="/" class="logo">
                  <img src="/images/demos/demo-6/logo-black2.png" alt="Molla Logo" width="150" height="160">
              </a>
          </div><!-- End .header-left -->

          <div class="header-right">
              <a href="/wishlist" class="wishlist-link">
                  <!-- <i class="icon-heart-o"></i> -->
                  <!-- <span class="wishlist-count">3</span> -->
                  <!-- <span class="wishlist-txt">My Wishlist</span> -->
              </a>

              <div class="dropdown cart-dropdown">
                  <a href="/cart" class="dropdown-toggle" role="button">
                      <i class="icon-shopping-cart"></i>
                      <span class="cart-count"><%= %></span>
                      <!-- <span class="cart-txt">$  164,00</span> -->
                  </a>

              </div><!-- End .cart-dropdown -->
              <div>
                <ul>
                    <li>
                        <% if (typeof userDetail !== 'undefined') { %>
                          <div class="dropdown compare-dropdown">
                            <a href="#" class="dropdown-toggle" role="button" data-toggle="dropdown" aria-haspopup="true"
                              aria-expanded="false" data-display="static" title="Compare Products" aria-label="Compare Products">
                              <i class="fa-solid fa-wallet fa-sm pt-1 mt-1"></i>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right">
                              <ul class="compare-products">
                                <li class="compare-product text-center">
                                  <h5>Available Wallet Balance</h5>
                                </li>
                              </ul>
                              <div class="col-lg-12">
                                <div class="row">
                                  <div class="col-lg-12 text-center">
                                    <p style="font-size: 2.4rem; font-weight: 500;">â‚¹ <%= userDetail.wallet.balance %></p>
                                    <input type="hidden" id="userWallet" value="<%= userDetail.wallet.balance %>">
                                    <button onclick="openAddFundModal()" class="btn btn-primary mt-2">Add Fund</button>  
                                  </div>
                                </div>
                              </div>
                            </div><!-- End .dropdown-menu -->
                          </div><!-- End .compare-dropdown -->
                        <% } %>
                      </li>
                      
                </ul>
            </div>
              <ul class="top-menu top-link-menu ml-4">
                  <li>
                    <% if(typeof userDetail != "undefined"){%>
                        <a href="#">Links</a>
                        <ul>
                            <li><a href="/logout"><i class="icon-user"></i>Logout</a></li>
                        </ul>
                    <%}else{%>
                        <a href="#">Links</a>
                        <ul>
                            <li><a href="/login"><i class="icon-user"></i>Login</a></li>
                        </ul>
                    <%}%>
                     
                  </li>
                  
              </ul>

              
          </div>

      </div><!-- End .container -->

  </div><!-- End .header-middle -->

  <div class="header-bottom sticky-header">
      <div class="container">
          <div class="header-left">
              <nav class="main-nav sticky-header">
                  <ul class="menu sf-arrows">
                      <li class="megamenu-container active" >
                          <a href="/" class="sf" aria-selected="true">HOME</a>
                      </li>
                      <li class="megamenu-container " >
                        <a href="/products" class="sf" aria-selected="true">PRODUCTS</a>
                    </li>
                      <li>
                        <% if(typeof categoryData !== "undefined" && categoryData.length>0){%> 
                          <% categoryData.forEach((category)=>{%>
                                <li>
                                    <a href="/products/<%= category._id  %>"><%= category.category%></a>
                                </li>
                                <%} )
                            %><%}      
                        %>
                        
                     </li>
                      <li>

                          <% if(typeof userDetail  !== 'undefined'){ %>
                            <!-- <a href="#" class="sf-with-ul">Account</a> -->
                            <a href="#" style="color: rgb(118, 123, 118)">Hello <%= userDetail.name %></a>
                            <ul>
                              <li>
                                  <a href="/profile" class="sf">My Profile</a>
                              </li>
                              <li><a href="/logout">Logout</a></li>
                          </ul>
                          <%}else{%>
                            <a href="#" class="sf-with-ul">Account</a>
                            <ul>
                              <li><a href="/login">Login</a></li>
                          </ul>
                          <%} %>


                      </li>
                  </ul><!-- End .menu -->
              </nav><!-- End .main-nav -->

              <button class="mobile-menu-toggler">
                  <span class="sr-only">Toggle mobile menu</span>
                  <i class="icon-bars"></i>
              </button>
          </div><!-- End .header-left -->

          

      </div><!-- End .container -->
  </div><!-- End .header-bottom -->
</header><!-- End .header -->

<!-- Add Funds Modal -->

<div class="modal fade" id="addFundModal" tabindex="-1" role="dialog" aria-labelledby="addFundModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title" id="addFundModalLabel">Add Fund to Wallet</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
          </div>
          <div class="modal-body">
              <form>
                  <div class="form-group mb-4">
                      <label class="ml-4 mt-2 text-center" for="fundAmount">Amount (INR)</label>
                      <input type="number" class="form-control" id="fundAmount" placeholder="Enter amount">
                  </div>
              </form>
          </div>
          <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
              <button type="button" class="btn btn-primary" onclick="addFunds()">Add Funds</button>
          </div>
      </div>
  </div>
</div>



<script>
  function openAddFundModal() {
  $('#addFundModal').modal('show'); // Assuming you have a modal with the id 'addFundModal'
}

function addFunds() {
    console.log("add funds")
  const amount = document.getElementById("fundAmount").value;
    console.log(amount)
  if (!amount || isNaN(amount) || amount <= 0) {
    alert("Please enter a valid amount.");
    return;
  }

  // Make an API request to your server to create a Razorpay order
  fetch('/addFund', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ amount }),
  })
  .then(response => response.json())
  .then(order => {
    // Once you have the order details, redirect the user to Razorpay
    const options = {
      key: 'rzp_test_tsXrFaxO9oaxTP', // Replace with your Razorpay key
      amount: amount * 100,
      currency: "INR",
      order_id: undefined,
      name: 'Add Funds to Wallet',
      description: 'Add funds to your wallet',
      image: '', // Replace with your logo
      handler: function(response) {
        if (response.razorpay_payment_id) {
          // Handle the payment success response from Razorpay
          console.log('Payment ID:', response.razorpay_payment_id);
          console.log('Signature:', response.razorpay_signature);

          // Update wallet balance in the UI
          const newBalance = userDetail.wallet.balance + (amount * 100 / 100);
          document.getElementById('userWallet').value = newBalance;
        } else {
          // Handle the payment failure response from Razorpay
          console.log('Payment failed:', response.error.description);
          alert('Payment failed. Please try again later.');
        }
      },
    };

    const razorpay = new Razorpay(options);
    razorpay.open();
  })
  // In your frontend JavaScript (addFunds function)
.then(data => {
    if (data.message === 'Funds added to wallet successfully') {
        // Update wallet balance
        const newBalance = parseFloat(data.newBalance).toFixed(2);
        document.getElementById('userWallet').value = newBalance;

        // Optionally, you can show a success message to the user
          setTimeout(() => {
            console.log("swal")
              Swal.fire({
                  icon: 'success',
                  title: 'Funds added to wallet successfully',
                  showConfirmButton: true,
              });
          }, 5000);
    }
})
.catch(error => {
    console.error('Error:', error);
    alert('An error occurred while processing your request. Please try again later.');
  });
}
document.getElementById("walletBalance").textContent = parseFloat(amount) + parseFloat(document.getElementById("walletBalance").textContent);

// async function addFunds() {
//   try {
//     const amount = document.getElementById("fundAmount").value;

//     if (!amount || isNaN(amount) || amount <= 0) {
//       alert("Please enter a valid amount.");
//       return;
//     }

//     const response = await fetch('/addFund', {
//       method: 'POST',
//       headers: {
//         'Content-Type': 'application/json',
//       },
//       body: JSON.stringify({ amount }),
//     });

//     const order = await response.json();

//     const options = {
//       key: 'rzp_test_tsXrFaxO9oaxTP', // Replace with your Razorpay key
//       amount: amount * 100,
//       currency: "INR",
//       order_id: undefined,
//       name: 'Add Funds to Wallet',
//       description: 'Add funds to your wallet',
//       image: '', // Replace with your logo
//       handler: async function(response) {
//         if (response.razorpay_payment_id) {
//           const verifyResponse = await fetch('/verifyPayment', {
//             method: 'POST',
//             headers: {
//               'Content-Type': 'application/json',
//             },
//             body: JSON.stringify({ payment_id: response.razorpay_payment_id, order_id: order.id }),
//           });

//           const data = await verifyResponse.json();

//           if (data.message === 'Payment successful' && data.captured === true) {
//             // Get the current wallet balance
//             const walletBalance = sessionStorage.getItem('walletBalance');

//             // Update the wallet balance
//             const newBalance = walletBalance + parseFloat(amount);
//             sessionStorage.setItem('walletBalance', newBalance);

//             // Update the UI
//             document.getElementById('userWallet').value = newBalance;
//           }
//         }
//       },
//     };

//     const razorpay = new Razorpay(options);
//     razorpay.open();
//   } catch (error) {
//     console.error('Error:', error);
//     alert('An error occurred while processing your request. Please try again later.');
//   }
// }


</script>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<!-- <link rel="stylesheet" href="path_to_sweetalert2.min.css">
<script src="path_to_sweetalert2.min.js"></script> -->

