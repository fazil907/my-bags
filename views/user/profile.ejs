<%-include("../partials/userPartials/header")  %>
<%-include("../partials/userPartials/navbar")  %>


<main class="main">
  <div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
    <div class="container">
      <h1 class="page-title">My Account<span>Shop</span></h1>
    </div><!-- End .container -->
  </div><!-- End .page-header -->
    <nav aria-label="breadcrumb" class="breadcrumb-nav mb-3">
        <div class="container">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="index.html">Home</a></li>
                <li class="breadcrumb-item"><a href="#">Shop</a></li>
                <li class="breadcrumb-item active" aria-current="page">My Account</li>
            </ol>
        </div><!-- End .container -->
    </nav><!-- End .breadcrumb-nav -->

<div class="page-content">
     <div class="dashboard">
          <div class="container">
               <div class="row">
                    <aside class="col-md-4 col-lg-3">
                         <ul class="nav nav-dashboard flex-column mb-3 mb-md-0" role="tablist">
                              <li class="nav-item">
                                   <a class="nav-link active" id="tab-dashboard-link"
                                        data-toggle="tab" href="#tab-dashboard" role="tab"
                                        aria-controls="tab-dashboard"
                                        aria-selected="true">Dashboard</a>
                              </li>
                              <li class="nav-item">
                                   <a class="nav-link" id="tab-orders-link" data-toggle="tab"
                                        href="#tab-orders" role="tab"
                                        aria-controls="tab-orders"
                                        aria-selected="false">Orders</a>
                              </li>
                              <li class="nav-item">
                                   <a class="nav-link" id="tab-downloads-link"
                                        data-toggle="tab" href="#tab-downloads" role="tab"
                                        aria-controls="tab-downloads"
                                        aria-selected="false">Wallet</a>
                              </li>
                              <li class="nav-item">
                                   <a class="nav-link" id="tab-address-link" data-toggle="tab"
                                        href="#tab-address" role="tab"
                                        aria-controls="tab-address"
                                        aria-selected="false">Adresses</a>
                              </li>
                              <li class="nav-item">
                                   <a class="nav-link" id="tab-account-link" data-toggle="tab"
                                        href="#tab-account" role="tab"
                                        aria-controls="tab-account"
                                        aria-selected="false">Account Details</a>
                              </li>
                              <li class="nav-item">
                                   <a class="nav-link" href="/logout">Logout</a>
                              </li>
                         </ul>
                    </aside><!-- End .col-lg-3 -->

                    <div class="col-md-8 col-lg-9">
                         <div class="tab-content">
                              <div class="tab-pane fade show active" id="tab-dashboard"
                                   role="tabpanel" aria-labelledby="tab-dashboard-link">
                                   <p>
                                   <h2>Hello <span class="font-weight-normal text-dark">
                                             <%= userDetail.name %>
                                        </span>
                                   </h2>
                                   </p>
                                   <br>
                                   From your account dashboard you can view your orders, manage
                                   your <a href="#tab-address"
                                        class="tab-trigger-link">shipping and billing
                                        addresses</a>, and <a href="#tab-account"
                                        class="tab-trigger-link">edit your password and
                                        account details</a>.
                                   </p>
                              </div><!-- .End .tab-pane -->

                              <div class="tab-pane fade" id="tab-orders" role="tabpanel"
                                   aria-labelledby="tab-orders-link">
                                   <p>To see your order history click on the button.</p>
                                   <a href="/myOrder"
                                        class="btn btn-outline-primary-2"><span>Order
                                             Details</span><i
                                             class="icon-long-arrow-right"></i></a>
                              </div><!-- .End .tab-pane -->

                              <div class="tab-pane fade" id="tab-downloads" role="tabpanel"
                                   aria-labelledby="tab-downloads-link">

                                   <table class="table table-wishlist table-mobile">

                                        <thead>
                                             <tr>
                                                  <th>Date</th>
                                                  <th>Details</th>
                                                  <th>Amount</th>
                                                  <th>Status</th>
                                             </tr>
                                        </thead>

                                   </table><!-- End .table table-wishlist -->

                              </div><!-- .End .tab-pane -->


                              <div class="tab-pane fade" id="tab-address" role="tabpanel"
                                   aria-labelledby="tab-address-link">
                                   <p>The following addresses will be used on the checkout page
                                        by default.</p>

                                   <div class="row">
                                        <% addressData.forEach(address=> { %>
                                             <div class="col-lg-6"
                                                  id="addressCard<%= address._id %>">

                                                  <div class="card card-dashboard">
                                                       <div class="card-body">

                                                            <p>
                                                                 <strong>Name:</strong>
                                                                 <%= address.name %><br>
                                                                      <strong>Mobile
                                                                           number:</strong>
                                                                      <%= address.mobile %><br>
                                                                           <strong>Email:</strong>
                                                                           <%= address.email %>
                                                                                <br>
                                                                                <strong>Address:</strong>
                                                                                <%= address.address
                                                                                     %><br>
                                                                                     <strong>City:</strong>
                                                                                     <%= address.city
                                                                                          %>
                                                                                          <br>
                                                                                          <strong>State:</strong>
                                                                                          <%= address.state
                                                                                               %>
                                                                                               <br>
                                                                                               <strong>Pincode:</strong>
                                                                                               <%= address.pincode
                                                                                                    %>
                                                                                                    <br>

                                                                                                    <a class="edit-address-btn"
                                                                                                         id="editAddressBtn"
                                                                                                         href="/editAddress?addressId=<%= address._id %>"
                                                                                                         data-id="<%= address._id %>"
                                                                                                         >Edit
                                                                                                         <i
                                                                                                              class="icon-edit"></i></a>
                                                                                                    <a href="#"
                                                                                                         class="ml-5"
                                                                                                         onclick="deleteAddress('<%= address._id %>')">Delete
                                                                                                         <i
                                                                                                              class="fa-solid fa-trash"></i></a>
                                                            </p>
                                                       </div><!-- End .card-body -->
                                                  </div><!-- End .card-dashboard -->
                                             </div><!-- End .col-lg-6 -->

                                             <% }) %>


                                   </div><!-- End .row -->
                              </div><!-- .End .tab-pane -->

                              <div class="tab-pane fade" id="tab-account" role="tabpanel"
                                   aria-labelledby="tab-account-link">
                                   <form id="profileForm">
                                        <div class="row">
                                             <div class="col-sm-6">
                                                  <label> Name *</label>
                                                  <input type="text" name="name"
                                                       class="form-control"
                                                       value="<%=userDetail.name%>" required>
                                                  <p id="nameError"
                                                       class="text-danger error-msg"></p>
                                             </div><!-- End .col-sm-6 -->

                                             <div class="col-sm-6">
                                                  <label>Mobile No *</label>
                                                  <input type="tel" name="phone"
                                                       class="form-control"
                                                       value="<%=userDetail.phone%>" required>
                                                  <p id="phoneError"
                                                       class="text-danger error-msg"></p>
                                             </div><!-- End .col-sm-6 -->
                                        </div><!-- End .row -->


                                        <div class="row">
                                             <div class="col-sm-6">
                                                  <label>Email*</label>
                                                  <input type="email" name="email"
                                                       class="form-control"
                                                       value="<%=userDetail.email%>" required>
                                                  <p id="emailError"
                                                       class="text-danger error-msg"></p>
                                             </div><!-- End .col-sm-6 -->

                                             <div class="col-sm-6">
                                                  <label>Current Password</label>
                                                  <input type="password" name="currentPassword"
                                                       class="form-control" >
                                                  <p id="currentPasswordError"
                                                       class="text-danger error-msg"></p>
                                             </div><!-- End .col-sm-6 -->
                                        </div><!-- End .row -->


                                        <div class="row">
                                             <div class="col-sm-6">
                                                  <label>New Password *</label>
                                                  <input type="password" name="newPassword"
                                                       class="form-control" >
                                                  <p id="newPasswordError"
                                                       class="text-danger error-msg"></p>
                                             </div><!-- End .col-sm-6 -->

                                             <div class="col-sm-6">
                                                  <label>Confirm Password *</label>
                                                  <input type="password" name="confirmPassword"
                                                       class="form-control" >
                                                  <p id="confirmPasswordError"
                                                       class="text-danger error-msg"></p>
                                             </div><!-- End .col-sm-6 -->
                                        </div><!-- End .row -->





                                        <button type="submit"
                                             class="btn btn-outline-primary-2">
                                             <span>SAVE CHANGES</span>
                                             <i class="icon-long-arrow-right"></i>
                                        </button>
                                   </form>
                              </div>
                         </div>
                    </div>
               </div>
          </div>
     </div>
</div>
 </main>

                    <script src="/js/axios.min.js"></script>
                    <script src="https://cdnjs.cloudflare.com/ajax/libs/alertify.js/0.3.11/alertify.min.js"></script>


                    <script>
                         const handleProfile = async (event) => {
                              event.preventDefault();

                              const formData = new FormData(event.target);
                              resetError();
                              try {
                                   const response = await axios.post("/verifyProfile", formData, {
                                        headers: {
                                             'Content-Type': 'application/json'
                                        }
                                   });

                                   if (response.status === 200) {
                                        window.location.href = "/";
                                   }
                              } catch (error) {
                                   if (error.response.status === 400) {
                                        const validationErrors = error.response.data.error;
                                        Object.keys(validationErrors).forEach((key) => {
                                             document.getElementById(key).textContent = validationErrors[key];
                                        });
                                   } else {
                                        alertify.alert("Something went wrong", function () {
                                             alertify.message("OK");
                                        });
                                   }
                              }
                         }

                         document.getElementById('profileForm').addEventListener("submit", handleProfile);

                         function resetError() {
                              const errorElements = document.querySelectorAll(".error-msg");
                              errorElements.forEach((element) => {
                                   element.textContent = "";
                              });
                         }





                         const deleteAddress = async (addressId) => {

                              const result = await Swal.fire({
                                   title: "Delete Address",
                                   text: "Do you want to delete this address?\nThis cannot be undone!",
                                   icon: "question",
                                   showCancelButton: true,
                                   confirmButtonColor: "#3085d6",
                                   cancelButtonColor: "#d33",
                                   confirmButtonText: "Yes, Delete",
                                   cancelButtonText: "DISMISS",
                              });

                              if (result.value) {
                                   try {
                                        const response = await fetch(`/deleteAddress?addressId=${addressId}`, {
                                             method: "GET",
                                             headers: {
                                                  "Content-Type": "application/json",
                                             },
                                        });

                                        if (response.ok) {
                                             Swal.fire({
                                                  icon: "success",
                                                  title: "Address has been deleted successfully",
                                                  showConfirmButton: true,
                                                  confirmButtonText: "OK",
                                                  confirmButtonColor: "#4CAF50",
                                             });
                                             document.getElementById("addressCard" + addressId).innerHTML = "";
                                        } else {
                                             Swal.fire({
                                                  icon: "warning",
                                                  title: "Something error!!",
                                                  showConfirmButton: true,
                                                  confirmButtonText: "DISMISS",
                                                  confirmButtonColor: "#D22B2B",
                                             });
                                        }
                                   } catch (error) {
                                        console.log(error.message);
                                   }
                              }
                         };
                    </script>

     <!-- <script>

          const editAddressBtns = document.querySelectorAll(".edit-address-btn");

          const editAddressPanel = document.querySelector("#editAddressPanel");

          const addressIdInput = document.getElementById("addressId");

          const fullNameInput = document.querySelector(".full-name-input");
          const mobileNumberInput = document.querySelector(".mobile-number-input");
          const addressLineInput = document.querySelector(".address-line-input");
          const emailInput = document.querySelector(".email-input");
          const cityInput = document.querySelector(".city-input");
          const stateInput = document.querySelector(".state-input");
          const pincodeInput = document.querySelector(".pincode-input");

          editAddressBtns.forEach((btn) => {

          btn.addEventListener("click", async (event) => {
               event.preventDefault();
               editAddressPanel.style.display = "block";
               addAddressPanel.style.display = "none";

               const addressId = btn.dataset.id;

               try {
                    const response = await fetch(`/addressData?addressId=${addressId}`, {
                         method: "GET",
                         headers: {
                              "Content-Type": "application/json", // Adjust the content type based on your server's requirements
                              // Add any other headers if required
                         },
                    });

                    if (response.ok) {
                         const addressData = await response.json();

                         // Populate the input fields with the received addressData

                         addressIdInput.value = addressData._id;

                         fullNameInput.value = addressData.name;
                         mobileNumberInput.value = addressData.mobile;
                         addressLineInput.value = addressData.addressLine;
                         emailInput.value = addressData.email;
                         cityInput.value = addressData.city;
                         stateInput.value = addressData.state;
                         pincodeInput.value = addressData.pincode;
                    } else {
                         console.log("Failed to fetch address data");
                    }
               } catch (error) {
                    console.log(error.message);
               }
          });
          });

          function scrollToForm() {
          // Delay for a certain duration (e.g., 500 milliseconds) before scrolling

          setTimeout(function () {
               // Calculate the offset of the target element
               const targetOffset = $("#editAddressPanel").offset().top;
          
               // Calculate the height of the window
               const windowHeight = $(window).height();
          
               // Calculate the final scroll position to scroll to the top of the target element
               const scrollPosition = targetOffset - windowHeight + $("#editAddressPanel").outerHeight();
               
               $("html, body").animate(
                    {
                         scrollTop: scrollPosition,
                    },
                    800
               ); // Adjust the animation speed as needed
          }, 300); // Adjust the delay duration as needed
          }

          function scrollToForm2() {
          // Delay for a certain duration (e.g., 500 milliseconds) before scrolling
          setTimeout(function () {
               // Calculate the offset of the target element
               const targetOffset = $("#addAddressPanel").offset().top;

               // Calculate the height of the window
               const windowHeight = $(window).height();

               // Calculate the final scroll position to scroll to the top of the target element
               const scrollPosition = targetOffset - windowHeight + $("#addAddressPanel").outerHeight();

               // Animate scrolling to the target element
               $("html, body").animate(
                    {
                         scrollTop: scrollPosition,
                    },
                    800
               ); // Adjust the animation speed as needed
          }, 300); // Adjust the delay duration as needed
          }

          const updateAddress = document.getElementById("updateAddress");

          if (updateAddress) {
          updateAddress.addEventListener("submit", async function (event) {
               event.preventDefault();

               const form = event.target;
               const formData = new FormData(form);

               const addressId = document.getElementById("addressId").value;

               if ($(form).valid()) {
                    try {
                         const response = await fetch(`/updateAddress?addressId=${addressId}`, {
                              method: "POST",
                              body: JSON.stringify(Object.fromEntries(formData)),
                              headers: {
                              "Content-Type": "application/json",
                              },
                         });

                         if (response.ok) {
                              Swal.fire({
                              icon: "success",
                              title: "Successfully Updated address",
                              showConfirmButton: true,
                              confirmButtonText: "OK",
                              confirmButtonColor: "#4CAF50",
                              });
                              editAddressPanel.style.display = "none";
                              form.reset();
                         } else {
                              Swal.fire({
                              icon: "error",
                              title: "Some error occured",
                              showConfirmButton: true,
                              confirmButtonText: "CANCEL",
                              confirmButtonColor: "#D22B2B",
                              });
                         }
                    } catch (error) {
                         console.log("Error:", error.message);
                    }
               }
          });
          }

     </script> -->

<%-include("../partials/userPartials/footer")  %>
